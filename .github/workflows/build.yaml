name: .NET 5 CI
on:
  push:
    paths: src/**

jobs:
  PreBuild:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      # Setup dotnet
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.401'
      
      # Get CMake
      - name: Get CMake
        uses: lukka/get-cmake@v3.21.2
      
      # Update submodules
      - name: Update submodules
        run: git submodule update --init
        
      # CMake Asar project
      - name: run-cmake
        uses: lukka/run-cmake@v3.4
        with:
          cmakeListsTxtPath: ./src/Asar/src/CMakeLists.txt
          buildDirectory: ./src/Asar/
          cmakeGenerator: "Visual Studio 16 2019"
          cmakeAppendedArgs: "-A x64"
      
      # Cache stuff
      - name: Cache
        uses: actions/cache@v2.1.6
        with:
          path: ./src/Asar/asar
          key: prebuild
          
  Build:
    needs: PreBuild
    runs-on: ${{ matrix.os }}
    steps: 
      - name: Build solution
        run: dotnet build ./src -o ./bin
        
      - name: Copy cimgui
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp "./src/ImGui.NET/deps/cimgui/win-x64/cimgui.dll" "./bin/cimgui.dll"
          elif [ "$RUNNER_OS" == "Linux" ]; then
            cp "./src/ImGui.NET/deps/cimgui/linux-x64/cimgui.so" "./bin/cimgui.so"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            cp "./src/ImGui.NET/deps/cimgui/osx-x64/cimgui.dylib" "./bin/cimgui.dylib"
          fi
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ runner.os }}
          path: ./bin
        
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        
  Test:
    needs: PreBuild
    runs-on: ${{ matrix.os }}
    steps:  
      - name: Run unit tests
        run: dotnet test ./src
        
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
