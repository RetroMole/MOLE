name: Build
on: [push, pull_request, workflow_dispatch]

jobs:        
  LinuxBuild:
    if: 
      ${{ 
        !(
          contains(github.event.head_commit.message, '[windows-only]') ||
          contains(github.event.head_commit.message, '[macos-only]') ||
          contains(github.event.head_commit.message, '[linux-skip]') ||
          contains(github.event.head_commit.message, '[ci-skip]')
        )
        }}
    runs-on: ubuntu-latest
    steps: 
      # Download repo
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
        
      # Setup dotnet
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.401'    
      
      # Build solution
      - name: Build solution
        run: dotnet build ./src/MOLE.sln -o ./bin
        
      # Copy cimgui to output
      - name: Copy cimgui
        shell: bash
        run: cp "./deps/cimgui/linux-x64/cimgui.so" "./bin/cimgui.so"
        
      # Download asar artifact to output
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.15.0
        with:
          workflow: 'asar.yaml'
          name: 'AsarLinux'
          path: './bin'
      
      # Upload build artifacts to github
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Linux
          path: ./bin
          
  WindowsBuild:
    if: 
      ${{ 
        !(
          contains(github.event.head_commit.message, '[linux-only]') ||
          contains(github.event.head_commit.message, '[macos-only]') ||
          contains(github.event.head_commit.message, '[windows-skip]') ||
          contains(github.event.head_commit.message, '[ci-skip]')
        )
        }}
    runs-on: windows-latest
    steps: 
      # Download repo
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
        
      # Setup dotnet
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.401'    
      
      # Build solution
      - name: Build solution
        run: dotnet build ./src/MOLE.sln -o ./bin
        
      # Copy cimgui to output
      - name: Copy cimgui
        run: copy "./deps/cimgui/win-x64/cimgui.dll" "./bin/cimgui.dll"
      
      # Download asar artifact to output
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.15.0
        with:
          workflow: 'asar.yaml'
          name: 'AsarWindows'
          path: './bin'
      
      # Upload build artifacts to github
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Windows
          path: ./bin
          
  MacOSBuild:
    if: 
      ${{ 
        !(
          contains(github.event.head_commit.message, '[windows-only]') ||
          contains(github.event.head_commit.message, '[linux-only]') ||
          contains(github.event.head_commit.message, '[macos-skip]') ||
          contains(github.event.head_commit.message, '[ci-skip]')
        )
        }}
    runs-on: macos-latest
    steps: 
      # Download repo
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
        
      # Setup dotnet
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.401'    
      
      # Build solution
      - name: Build solution
        run: dotnet build ./src/MOLE.sln -o ./bin
        
      # Copy cimgui to output
      - name: Copy cimgui
        shell: bash
        run: cp "./deps/cimgui/osx-x64/cimgui.dylib" "./bin/cimgui.dylib"
        
      # Download asar artifact to output
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.15.0
        with:
          workflow: 'asar.yaml'
          name: 'AsarMacOS'
          path: './bin'
      
      # Upload build artifacts to github
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: MacOS
          path: ./bin
