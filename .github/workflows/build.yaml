name: .NET 5 CI
on: [push, workflow_dispatch]

jobs:        
  Build:
    runs-on: ${{ matrix.os }}
    steps: 
      # Download repo
      - uses: actions/checkout@v2
      
      # Update submodules
      - name: Update submodules
        run: git submodule update --init
        
      # Setup dotnet
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.401'    
              
      # Get CMake
      - name: Get CMake
        uses: lukka/get-cmake@v3.21.2

      # CMake Asar project
      - name: Cmake asar
        shell: bash
        run: |
          mkdir ./bin
          cmake -S ./src/Asar/src -B ./src/Asar/out
          cd ./src/Asar/out/asar
          if [ "$RUNNER_OS" == "Windows" ]; then
            msbuild asar.vcxproj
            cd ../../../../
            cp ./src/Asar/out/asar/Debug/asar.dll ./bin/asar.dll
          else
            make
            cd ../../../../
            if [ "$RUNNER_OS" == "Linux" ]; then
              cp ./src/Asar/out/asar/libasar.so ./bin/libasar.so
            elif [ "$RUNNER_OS" == "macOS" ]; then
              cp ./src/Asar/out/asar/libasar.dylib ./bin/libasar.dylib
            fi
          fi
      
      # Build solution
      - name: Build solution
        run: dotnet build ./src/MOLE.sln -o ./bin
        
      # Copy cimgui to output
      - name: Copy cimgui
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp "./src/ImGui.NET/deps/cimgui/win-x64/cimgui.dll" "./bin/cimgui.dll"
          elif [ "$RUNNER_OS" == "Linux" ]; then
            cp "./src/ImGui.NET/deps/cimgui/linux-x64/cimgui.so" "./bin/cimgui.so"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            cp "./src/ImGui.NET/deps/cimgui/osx-x64/cimgui.dylib" "./bin/cimgui.dylib"
          fi
      
      # Upload build artifacts to github
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ runner.os }}
          path: ./bin
        
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
